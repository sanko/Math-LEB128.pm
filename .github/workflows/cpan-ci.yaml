---
jobs:
  install_perl:
    name: '${{ matrix.os }}-${{ matrix.perl }}${{ matrix.flags }}'
    runs-on: '${{ matrix.os }}'
    steps:
      - uses: actions/checkout@v4
      - id: cache-perl
        name: Cache perl
        uses: actions/cache@v4
        with:
          key: '${{ matrix.os }}-perl-v${{ matrix.perl }}${{ matrix.flags }}'
          path: '~/perl5/perlbrew/'
      - if: "${{  steps.cache-perl.outputs.cache-hit != 'true' && matrix.os == 'windows-2019' }}"
        name: Init dev env on Windows
        run: |
          # skip installing perl if it is already installed.
          if (!(Test-Path "C:\strawberry\perl\bin")) {
            choco install strawberryperl
          }
          echo @"
          C:\strawberry\c\bin
          C:\strawberry\perl\site\bin
          C:\strawberry\perl\bin
          "@ |
            Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      - if: "${{  steps.cache-perl.outputs.cache-hit != 'true' && matrix.os == 'windows-2019' }}"
        name: 'Build perl ${{ matrix.perl }} directly on Windows'
        run: |
          git clone --depth 1 --branch v${{matrix.perl}} https://github.com/Perl/perl5.git
          pushd perl5\win32
          
          gmake CCHOME=C:\strawberry\c INST_TOP="C:\Users\runneradmin\perl5\perlbrew"  ^
              ${{ matrix.flags == '--64int'  && 'USE_64_BIT_INT=define'                   || '' }} ^
              ${{ matrix.flags == '--thread' && 'USE_ITHREADS=define    USE_MULTI=define' || '' }} ^
              ${{ matrix.flags == '--ld'     && 'USE_LONG_DOUBLE=define'                  || '' }} ^
              ${{ matrix.flags == '--multi'  && 'USE_MULTI=define'                        || '' }} ^
              -f GNUMakefile -j2 install
          
          popd
          set PATH=C:\Users\runneradmin\perl5\perlbrew\bin;%PATH%
        shell: cmd
      - if: "${{ steps.cache-perl.outputs.cache-hit != 'true' && matrix.os != 'windows-2019' }}"
        name: 'Build perl ${{ matrix.perl }} with perlbrew'
        run: |
          \curl -L https://install.perlbrew.pl | bash
          source ~/perl5/perlbrew/etc/bashrc
          
          perlbrew available
          perlbrew install-cpanm
          
          perlbrew install --switch --verbose perl-${{ matrix.perl }} --as cache-${{ matrix.os }}${{ matrix.perl }}${{ matrix.flags }} -j 12 --notest --noman ${{ matrix.flags }}
          perlbrew clean
        shell: bash
      - if: "${{ matrix.os == 'windows-2019' }}"
        name: 'Testing on cached perl ${{ matrix.os }}-${{ matrix.perl }}(${{ matrix.flags }})'
        run: |
          set PATH=C:\Users\runneradmin\perl5\perlbrew\bin;%PATH%
          
          cpanm --test-only -v --mirror http://cpan.cpantesters.org/ Affix
        shell: cmd
      - if: "${{ matrix.os != 'windows-2019' }}"
        name: 'Testing on cached perl ${{ matrix.os }}-${{ matrix.perl }}(${{ matrix.flags }})'
        run: |
          source ~/perl5/perlbrew/etc/bashrc
          
          cpanm --test-only -v --mirror http://cpan.cpantesters.org/ Affix
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        exclude:
          - flags: -Dusequadmath
            os: macos-latest
          - flags: --thread
            os: macos-latest
        flags:
          - --64int
          - --thread
          - --ld
          - --multi
          - ''
        os:
          - ubuntu-latest
          - macos-latest
          - windows-2019
        perl:
          - 5.38.0
          - 5.36.0
          - 5.34.1
          - 5.32.1
          - 5.30.3
name: CPAN CI
on: workflow_dispatch
